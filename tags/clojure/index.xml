<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clojure on Adele M. Hedrick</title>
    <link>https://adelehedrick.github.io/tags/clojure/</link>
    <description>Recent content in Clojure on Adele M. Hedrick</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Oct 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://adelehedrick.github.io/tags/clojure/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Exploring Game of Thrones Dataset with Clojure</title>
      <link>https://adelehedrick.github.io/blog/2016/10/15/clojure-got-tutorial/</link>
      <pubDate>Sat, 15 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/10/15/clojure-got-tutorial/</guid>
      <description>

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before We Begin&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m assuming you have the Clojure JAR in your home directory (e.g. accessible via ~/.clojure-1.8.0.jar) and know how to run a basic script. If you need a reminder, head on to &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/18/getting-started-clojure/&#34;&gt;Getting Started with Clojure&lt;/a&gt; and &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/22/clojure-classes/&#34;&gt;Making Classes From Clojure&lt;/a&gt; to get yourself caught up.&lt;/p&gt;

&lt;p&gt;This post is also assuming that you are running Ubuntu or some other Linux flavor.&lt;/p&gt;

&lt;p&gt;The data set we are going to be using is the Game of Thrones dataset on Kaggle, so you will need to make an account so you can &lt;a href=&#34;https://www.kaggle.com/mylesoneill/game-of-thrones&#34;&gt;download the zip&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;setup-hello-realm&#34;&gt;Setup Hello Realm&lt;/h2&gt;

&lt;p&gt;You need to define a namespace, which is the same as the file path and name of this file in reference to where it will be executed from. Since we are just going to execute it in the current directory, we just need to define the namespace as the file name, without the extension.&lt;/p&gt;

&lt;p&gt;To make sure the realm knows we are here, let&amp;rsquo;s say hello.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hello Realm&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got
Hello Realm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The realm knows we are here, so now let&amp;rsquo;s start investigating the deaths!&lt;/p&gt;

&lt;h2 id=&#34;print-out-deaths&#34;&gt;Print Out Deaths&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s start by reading in the &lt;code&gt;character-deaths.csv&lt;/code&gt; and printing the contents out to the console. To do any input-output we need to use the &lt;code&gt;clojure.java.io&lt;/code&gt; library, so be sure to add it to your namespace.&lt;/p&gt;

&lt;p&gt;We then need to add an argument to our main method to pass the name of the filename we wish to open.&lt;/p&gt;

&lt;p&gt;Lastly, we want to use a &lt;code&gt;with-open&lt;/code&gt; to to open the file, create a reader object, and then print the &lt;code&gt;line-seq&lt;/code&gt; created from the reader.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
  	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now when we run our script, we need to include the &amp;ldquo;character-deaths.csv&amp;rdquo; into the arguments passed to the Clojure main method.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
(Name,Allegiances,Death Year,Book of Death,Death Chapter,Book Intro Chapter,Gender,Nobility,GoT,CoK,SoS,FfC,DwD Addam Marbrand,Lannister,,,,56,1,1,1,1,1,1,0 Aegon Frey (Jinglebell),None,299,3,51,49,1,1,0,0,1,0,0 Aegon Targaryen,House Targaryen,,,,5,1,1,0,0,0,0,1 Adrack Humble,House Greyjoy,300,5,20,20,1,1,0,0,0,0,1 Aemon Costayne,Lannister,,,,,1,1,0,0,1,0,0 Aemon Estermont,Baratheon,,,,,1,1,0,1,1,0,0 Aemon Targaryen (son of Maekar I),Night&#39;s Watch,300,4,35,21,1,1,1,0,1,1,0 Aenys Frey,None,300,5,,59,0,1,1,1,1,0,1 Aeron Greyjoy,House Greyjoy,,,,11,1,1,0,1,0,1,0 Aethan,Night&#39;s Watch,,,,0,1,0,0,0,1,0,0 Aggar,House Greyjoy,299,2,56,50,1,0,0,1,0,0,0 Aggo,House Targaryen,,,,54,1,0,1,1,1,0,1 Alan of Rosby,Night&#39;s Watch,300,5,4,18,1,1,0,1,1,0,1 Alayaya,None,,,,15,0,0,0,1,0,0,0 Albar Royce,Arryn,,,,38,1,1,1,0,0,1,0 Albett,Night&#39;s Watch,,,,26,1,0,1,0,0,0,0 Alebelly,House Stark,299,2,46,4,1,0,0,1,0,0,0 Alerie Hightower,House Tyrell,,,,6,0,1,0,0,1,1,0 Alesander Staedmon,Baratheon,,,,65,1,1,0,1,0,0,0 Alester Florent,Baratheon,300,4,,36,1,1,0,1,1,0,0 Alia of Braavos,None,,,,28,0,0,1
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;grabbing-the-headers-and-values&#34;&gt;Grabbing the Headers and Values&lt;/h2&gt;

&lt;p&gt;Looking at the character-deaths.csv file, we see that the first line is actually the column headers. So what I would like to do is read in the first line, and for that line read in, to become the keys to the values afterwards.&lt;/p&gt;

&lt;p&gt;So essentially I want the file to be parsed as a sequence of maps!&lt;/p&gt;

&lt;p&gt;Now I need to do some restructuring, because I need to call on the &lt;code&gt;line-seq&lt;/code&gt; once to get the keys, and then read in the rest as data. Since I need to call on the &lt;code&gt;line-seq&lt;/code&gt; in two different spots, let&amp;rsquo;s assign it to a symbol &lt;code&gt;ls&lt;/code&gt; using &lt;code&gt;let&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
  	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
  		&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
(Name,Allegiances,Death Year,Book of Death,Death Chapter,Book Intro Chapter,Gender,Nobility,GoT,CoK,SoS,FfC,DwD Addam Marbrand,Lannister,,,,56,1,1,1,1,1,1,0 Aegon Frey (Jinglebell),None,299,3,51,49,1,1,0,0,1,0,0 Aegon Targaryen,House Targaryen,,,,5,1,1,0,0,0,0,1 Adrack Humble,House Greyjoy,300,5,20,20,1,1,0,0,0,0,1 Aemon Costayne,Lannister,,,,,1,1,0,0,1,0,0 Aemon Estermont,Baratheon,,,,,1,1,0,1,1,0,0 Aemon Targaryen (son of Maekar I),Night&#39;s Watch,
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, there has been no change to our output, which is good!&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s see if we can take the first line from the &lt;code&gt;line-seq&lt;/code&gt; by using &lt;code&gt;first&lt;/code&gt; and binding it to the symbol &lt;code&gt;headers&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;headers: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;values: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
headers:  Name,Allegiances,Death Year,Book of Death,Death Chapter,Book Intro Chapter,Gender,Nobility,GoT,CoK,SoS,FfC,DwD
values:  (Name,Allegiances,Death Year,Book of Death,Death Chapter,Book Intro Chapter,Gender,Nobility,GoT,CoK,SoS,FfC,DwD Addam Marbrand,Lannister,,,,56,1,1,1,1,1,1,0 Aegon Frey (Jinglebell),None,299,3,51,49,1,1,0,0,1,0,0 Aegon Targaryen,House Targaryen,,,,5,1,1,0,0,0,0,1 Adrack Humble,House Greyjoy,300,5,20,20,1,1,0,0,0,0,1 Aemon Costayne,Lannister,,,,,1,1,0,0,1,0,0 Aemon Estermont,Baratheon,,,,,1,1,0,1,1,0,0 Aemon Targaryen (son of Maekar I),Night&#39;s Watch,300,4,35,21,1,1,1,0,1,1,0 Aenys Frey,None,300,5,,59,0,1,1,1,1,0,1 Aeron Greyjoy,House Greyjoy,,,,11,1,1,0,1,0,1,0 Aethan,Night&#39;s Watch,,,,0,1,0,0,0,1,0,0 Aggar,House Greyjo
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have successfully grabbed the string containing the headers, but what we assumed was going to be the values is actually the entire &lt;code&gt;line-seq&lt;/code&gt;. Let&amp;rsquo;s now use the &lt;code&gt;rest&lt;/code&gt; function (&lt;a href=&#34;http://clojure.org/reference/sequences#__em_rest_em_coll&#34;&gt;documentation&lt;/a&gt;) which will take everything after the first element of a sequence, and bind it to the symbol &lt;code&gt;values&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;headers: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;values: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
headers:  Name,Allegiances,Death Year,Book of Death,Death Chapter,Book Intro Chapter,Gender,Nobility,GoT,CoK,SoS,FfC,DwD
values:  (Addam Marbrand,Lannister,,,,56,1,1,1,1,1,1,0 Aegon Frey (Jinglebell),None,299,3,51,49,1,1,0,0,1,0,0 Aegon Targaryen,House Targaryen,,,,5,1,1,0,0,0,0,1 Adrack Humble,House Greyjoy,300,5,20,20,1,1,0,0,0,0,1 Aemon Costayne,Lannister,,,,,1,1,0,0,1,0,0 Aemon Estermont,Baratheon,,,,,1,1,0,1,1,0,0 Aemon Targaryen (son of Maekar I),Night&#39;s Watch,300,4,35,21,1,1,1,0,1,1,0 Aenys Frey,None,300,5,,59,0,1,1,1,1,0,1 Aeron Greyjoy,House Greyjoy,,,,11,1,1,0,1,0,1,0 Aethan,Night&#39;s Watch,,,,0,1,0,0,0,1,0,0 Aggar,House Greyjoy,299,2,56,50,1,0,0,1,0,0,0 
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are now getting somewhere! We have now extracted the first line as the &lt;code&gt;headers&lt;/code&gt; symbol and the rest of the file as the &lt;code&gt;values&lt;/code&gt; symbol!&lt;/p&gt;

&lt;h2 id=&#34;split-the-headers-up&#34;&gt;Split the Headers Up!&lt;/h2&gt;

&lt;p&gt;Before we can do anything with the headers and values, we need to turn them into a collections rather than one long string. To do that we can do a &lt;code&gt;split&lt;/code&gt; on the comma.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;headers: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;values: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
WARNING: reverse already refers to: #&#39;clojure.core/reverse in namespace: tutorial.got, being replaced by: #&#39;clojure.string/reverse
WARNING: replace already refers to: #&#39;clojure.core/replace in namespace: tutorial.got, being replaced by: #&#39;clojure.string/replace
headers:  [Name Allegiances Death Year Book of Death Death Chapter Book Intro Chapter Gender Nobility GoT CoK SoS FfC DwD]
values:  (Addam Marbrand,Lannister,,,,56,1,1,1,1,1,1,0 Aegon Frey (Jinglebell),None,299,3,51,49,1,1,0,0,1,0,0 Aegon Targaryen,House Targaryen,,,,5,1,1,0,0,0,0,1 Adrack Humble,House Greyjoy,300,5,20,20,1,1,0,0,0,0,1 Aemon Costayne,Lannister,,,,,1,1,0,0,1,0,0 Aemon Estermont,Baratheon,,,,,1,1,0,1,1,0,0 Aemon Targaryen (son of Maekar I),Night&#39;s Watch,300,4,35,21,1,1,1,0,1,1,0 Aenys Frey,None,300,5,,59,0,1,1,1,1,0,1 Aeron Greyjoy,House Greyjoy,,,,11,1,1,0,1,0,1,0 Aethan,Night&#39;s Watch,,,,0,1,0,0,0,1,0,0 Aggar,House Greyjoy,299,2,56,50,1,0,0,1,0,0,0 Aggo,House Targaryen,,,,54,1,0,1,1,1,0,1 Alan of Rosby,Night&#39;s Watch,30
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m getting warnings because I&amp;rsquo;m importing everything in the &lt;code&gt;string&lt;/code&gt; library and there are some conflicting names. Since all I need is &lt;code&gt;split&lt;/code&gt;, let&amp;rsquo;s just use the &lt;code&gt;split&lt;/code&gt; function in the string library, rather than the whole library.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;headers: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;values: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
headers:  [Name Allegiances Death Year Book of Death Death Chapter Book Intro Chapter Gender Nobility GoT CoK SoS FfC DwD]
values:  (Addam Marbrand,Lannister,,,,56,1,1,1,1,1,1,0 Aegon Frey (Jinglebell),None,299,3,51,49,1,1,0,0,1,0,0 Aegon Targaryen,House Targaryen,,,,5,1,1,0,0,0,0,1 Adrack Humble,House Greyjoy,300,5,20,20,1,1,0,0,0,0,1 Aemon Costayne,Lannister,,,,,1,1,0,0,1,0,0 Aemon Estermont,Baratheon,,,,,1,1,0,1,1,0,0 Aemon Targaryen (son of Maekar I),Night&#39;s Watch,300,4,35,21,1,1,1,0,1,1,0 Aenys Frey,None,300,5,,59,0,1,1,1,1,0,1 Aeron Greyjoy,House Greyjoy,,,,11,1,1,0,1,0,1,0 Aethan,Night&#39;s Watch,,,,0,1,0,0,0,1,0,0 Aggar,House Greyjoy,299,2,56,50,1,0,0,1,0,0,0 Aggo,House Targaryen,,,,54,1,0,1,1,1,0,1 Alan of Rosby,Night&#39;s Watch,300,5,4,18,1,1,0,1,1,0,1 Alayaya,None,,,,15,0,0,0,1,0,0,0 Albar Royce,Arryn,,,,38,1,1,1,0,0,1,0 Albett,Night&#39;s Watch,
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No more warnings! And we can clearly see that our &lt;code&gt;headers&lt;/code&gt; symbol is now a vector! I can use that!&lt;/p&gt;

&lt;h2 id=&#34;applying-functions-to-the-values&#34;&gt;Applying Functions to the Values&lt;/h2&gt;

&lt;p&gt;I want to put those &lt;code&gt;headers&lt;/code&gt; to good use now! So let&amp;rsquo;s apply them to each line in the values, but unfortunately our &lt;code&gt;values&lt;/code&gt; are still a sequence of strings. We need to iterate over the lines, splitting them and then mapping the items to the headers.&lt;/p&gt;

&lt;p&gt;In other words, I want to transform the sequence of strings, into a sequence of split strings, which means I want to &lt;code&gt;map&lt;/code&gt; a function over a sequence to generate another collection. To do this I can use the &lt;a href=&#34;https://clojuredocs.org/clojure.core/map&#34;&gt;map&lt;/a&gt; (do not get this confused with the map type collections of hash-map, sorted-map, struct-map). The &lt;em&gt;form&lt;/em&gt; for &lt;code&gt;map&lt;/code&gt; is &lt;code&gt;(map f coll)&lt;/code&gt;, so let&amp;rsquo;s quickly split up the strings using &lt;code&gt;split&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;headers: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;values: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Exception in thread &amp;quot;main&amp;quot; java.lang.RuntimeException: Unable to resolve symbol: % in this context, compiling:(tutorial/got.clj:12:23)
	at clojure.lang.Compiler.analyze(Compiler.java:6688)
	at clojure.lang.Compiler.analyze(Compiler.java:6625)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3834)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6870)
	at clojure.lang.Compiler.analyze(Compiler.java:6669)
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh I made a mistake using the &lt;code&gt;map&lt;/code&gt;! I remembered that I need to use the &lt;code&gt;%&lt;/code&gt; as a placeholder for each string/element in the sequence, but I forgot that I need to explicit say that the &lt;code&gt;(split % #&amp;quot;,&amp;quot;)&lt;/code&gt; is an anonymous function. There are two ways to define an anonymous function: &lt;code&gt;(fn ...)&lt;/code&gt; and &lt;code&gt;#(...)&lt;/code&gt;. I&amp;rsquo;m going to use the shorter of the two.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;headers: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;values: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
headers:  [Name Allegiances Death Year Book of Death Death Chapter Book Intro Chapter Gender Nobility GoT CoK SoS FfC DwD]
values:  ([Addam Marbrand Lannister    56 1 1 1 1 1 1 0] [Aegon Frey (Jinglebell) None 299 3 51 49 1 1 0 0 1 0 0] [Aegon Targaryen House Targaryen    5 1 1 0 0 0 0 1] [Adrack Humble House Greyjoy 300 5 20 20 1 1 0 0 0 0 1] [Aemon Costayne Lannister     1 1 0 0 1 0 0] [Aemon Estermont Baratheon     1 1 0 1 1 0 0] [Aemon Targaryen (son of Maekar I) Night&#39;s Watch 300 4 35 21 1 1 1 0 1 1 0] [Aenys Frey None 300 5  59 0 1 1 1 1 0 1] [Aeron Greyjoy House Greyjoy    11 1 1 0 1 0 1 0] [Aethan Night&#39;s Watch    0 1 0 0 0 1 0 0] [Aggar House Greyjoy 299 2 56 50 1 0 0 1 0 0 0] [Aggo House Targaryen    54 1 0 1 1 1 0 1] [Alan of Rosby Night&#39;s Watch 300 5 4 18 1 1 0 1 1 0 1] [Alayaya None    15 0 0 0 1 0 0 0] [Albar Royce Arryn    38 1 1 1 0 0 1 0] [Albett Night&#39;s Watch    26 1 0 1 0 0 0 0] [Alebelly House Stark 299 2 46 4 1 0 0 1 0 0 0] [Alerie Hightower House Tyrell    6 0 1 0 0 1 1 0] [Alesander Staedmon Baratheon    65 1 1 0 1 0 0 0] [Alester Florent Baratheon 300 4...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we are mapping experts, let&amp;rsquo;s map the &lt;code&gt;zipmap&lt;/code&gt; function (&lt;a href=&#34;http://clojuredocs.org/clojure.core/zipmap&#34;&gt;documentation&lt;/a&gt;) which has the &lt;em&gt;form&lt;/em&gt; &lt;code&gt;(zipmap keys vals)&lt;/code&gt;. The keys are always going to be our headers, but the vals are going to be each vector returned by the split.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: I took out the println for headers, since it&amp;rsquo;s pointless now&lt;/em&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;values: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
values:  ({SoS 1, DwD 0, Allegiances Lannister, Book Intro Chapter 56, Book of Death , Gender 1, FfC 1, GoT 1, CoK 1, Nobility 1, Death Chapter , Name Addam Marbrand, Death Year } {SoS 1, DwD 0, Allegiances None, Book Intro Chapter 49, Book of Death 3, Gender 1, FfC 0, GoT 0, CoK 0, Nobility 1, Death Chapter 51, Name Aegon Frey (Jinglebell), Death Year 299} {SoS 0, DwD 1, Allegiances House Targaryen, Book Intro Chapter 5, Book of Death , Gender 1, FfC 0, GoT 0, CoK 0, Nobility 1, Death Chapter , Name Aegon Targaryen, Death Year } {SoS 0, DwD 1, Allegiances House Greyjoy, Book Intro Chapter 20, Book of Death 5, Gender 1, FfC 0, GoT 0, CoK 0, Nobility 1, Death Chapter 20, Name Adrack Humble, Death Year 300} {SoS 1, DwD 0, Allegiances Lannister, Book Intro Chapter , Book of Death , Gender 1, FfC 0, GoT 0, CoK 0, Nobility 1, Death Chapter , Name Aemon Costayne, Death Year } {SoS 1, DwD 0, Allegiances Baratheon, Book Intro Chapter , Book of Death , Gender 1, FfC 0, GoT 0, CoK 1, Nobility 1, Death Chapter , Name Aemon Estermont, Death Year } {SoS 1, DwD 0, Allegiances Night&#39;s Watch, Book Intro Chapter 21, Book of Death 4, Gender 1, FfC 1, GoT 1, CoK 0, Nobility 1, Death Chapter 35, Name Aemon Targaryen (son of Maekar I), Death Year 300} {SoS 1, DwD 1, Allegiances None, Book Intro Chapter 59, Book of Death 5, Gender 0, FfC 0, GoT 1, CoK 1, Nobility 1, Death Chapter , Name Aenys Frey, Death Year 300}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;count-everything&#34;&gt;Count Everything!&lt;/h2&gt;

&lt;p&gt;I want to start doing a little bit of analysis, so how about a quick count of the unique items in each column? Sounds simple but there is a lot that needs to go on.&lt;/p&gt;

&lt;p&gt;Here is my procedural plan:
 1. Loop over headers
 2. Iterate over values, grabbing the value associated to the current header
 3. Create unique set for each group of values
 4. Count the unique set of strings&lt;/p&gt;

&lt;p&gt;So first off, let&amp;rsquo;s make sure we can loop over the headers within the let.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name
Allegiances
Death Year
Book of Death
Death Chapter
Book Intro Chapter
Gender
Nobility
GoT
CoK
SoS
FfC
DwD
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now my goal is to iterate over the values grabbing the value associated to the current header. To do this I am going to map the &lt;code&gt;get&lt;/code&gt; function over the values, which will return a sequence of values!&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name (Addam Marbrand Aegon Frey (Jinglebell) Aegon Targaryen Adrack Humble Aemon Costayne Aemon Estermont Aemon Targaryen (son of Maekar I) Aenys Frey Aeron Greyjoy Aethan Aggar Aggo Alan of Rosby Alayaya Albar Royce Albett Alebelly Alerie Hightower Alesander Staedmon Alester Florent Alia of Braavos Alla Tyrell Allard Seaworth Alliser Thorne Alyn Alyn Ambrose Alyn Estermont Alyn Stackspear Alys Karstark Alysane Mormont Alyx Frey Ambrode Amory Lorch Andar Royce Andrew Estermont Andrey Dalt Andrik Anguy Antario Jast Anvil Ryn Anya Waynwood Archibald Yronwood Ardrian Celtigar Areo Hotah Arianne Martell Arneld Arnolf Karstark Aron Santagar Arron Arron Qorgyle Arryk (Guard) Arson Arthor Karstark Arwyn Frey Arwyn Oakheart Arya Stark Arys O
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we just need to wrap that &lt;code&gt;map&lt;/code&gt; function with a &lt;code&gt;set&lt;/code&gt; to return only unique values!&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name #{Jared Frey Gared Creighton Longbough Young Henly Mord Tristifer Botley Larra Blackmont Arwyn Oakheart Kraznys mo Nakloz Gyles Rosby Denys Mallister Alys Karstark Spotted Pate of Maidenpool Lanna (Happy Port) Watt Skinner Arwyn Frey Marwyn Hazzea Bowen Marsh Arron Mohor Ossy Myles Morton Waynwood Lady of the Leaves Qhorin Halfhand Salladhor Saan Jarman Buckwell Esgred Cotter Pyke Philip Foote Pypar Loras Tyrell Dick Crabb Bran Stark Donnel Drumm Brenett Gage Umfred Squirrel Wallen Jeor Mormont Kojja Mo Gerren Ondrew Locke Walda Rivers (daughter of Aemon) Grenn Tom of Sevenstreams Hake Davos Seaworth Maril
...
...too many names...
...
Allegiances #{House Tyrell Arryn Wildling Tully House Arryn House Baratheon Martell Baratheon House Tully House Martell None Tyrell House Greyjoy Lannister House Lannister House Targaryen House Stark Stark Targaryen Greyjoy Night&#39;s Watch}
Death Year #{ 300 299 297 298}
Book of Death #{ 3 4 5 1 2}
Death Chapter #{ 58 9 3 51 50 34 69 49 26 4 60 14 59 61 57 68 30 21 80 33 20 67 47 19 17 25 73 42 7 66 44 48 53 18 36 12 27 62 75 24 76 35 6 38 70 77 39 1 63 0 43 74 37 46 11 45 56 32 55 2 72 16 41 10 65 40 31 64 23 52 29}
Book Intro Chapter #{ 58 9 3 51 50 34 69 49 22 26 4 8 28 60 14 59 61 57 68 30 21 80 33 20 67 47 19 17 25 73 78 15 42 7 66 44 5 48 53 18 36 12 13 27 62 75 24 35 6 38 70 39 1 63 0 43 74 37 46 11 45 56 32 55 2 72 54 16 41 10 65 40 31 71 64 23 52 79 29}
Gender #{1 0}
Nobility #{1 0}
GoT #{1 0}
CoK #{1 0}
SoS #{1 0}
FfC #{1 0}
DwD #{1 0}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can apply a count to the sets!&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name 916
Allegiances 21
Death Year 5
Book of Death 6
Death Chapter 72
Book Intro Chapter 80
Gender 2
Nobility 2
GoT 2
CoK 2
SoS 2
FfC 2
DwD 2

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;applying-more-statistics&#34;&gt;Applying More Statistics&lt;/h2&gt;

&lt;p&gt;What if I want to apply more than just &lt;code&gt;count&lt;/code&gt; to the set of mapped values? I could make a let statement within the body of the &lt;code&gt;doseq&lt;/code&gt; for the set, but turns out, there is a &lt;code&gt;:let&lt;/code&gt; keyword that we can apply to the arguments of the &lt;code&gt;doseq&lt;/code&gt;!&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;
      	      &lt;span style=&#34;color: #4e9a06&#34;&gt;:let&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name 916
Allegiances 21
Death Year 5
Book of Death 6
Death Chapter 72
Book Intro Chapter 80
Gender 2
Nobility 2
GoT 2
CoK 2
SoS 2
FfC 2
DwD 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nothing has changed, but now we are ready to apply more functions! Let&amp;rsquo;s try finding the &lt;code&gt;min&lt;/code&gt; of each set!&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;
      	      &lt;span style=&#34;color: #4e9a06&#34;&gt;:let&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- count:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- min:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;min &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name - count: 916 - min: #{Jared Frey Gared Creighton Longbough Young Henly Mord Tristifer Botley Larra Blackmont Arwyn Oakheart Kraznys mo Nakloz Gyles Rosby Denys Mallister Alys Karstark Spotted Pate of Maidenpool Lanna (Happy Port) Watt Skinner Arwyn Frey Marwyn Hazzea Bowen Marsh Arron Mohor Ossy Myles Morton Waynwood Lady of the Leaves Qhorin Halfhand Salladhor Saan Jarman Buckwell Esgred Cotter Pyke Philip Foote Pypar Loras Tyrell Dick Crabb Bran Stark Donnel Drumm Brenett Gage Umfred Squirrel Wallen Jeor Mormont Kojja Mo Gerren Ondrew Locke Walda Rivers (daughter of Aemon) Grenn Tom of Sevenstreams Hake Davos Seaworth Marillion Wat (orphan) Dale Seaworth Leo Lefford Patrek of King&#39;s Mountain Hosteen Frey Wayn (guard) Godwyn Horas Redwyne Syrio Forel Lewys Lydden Qyburn Jonos Bracken Lyonel Amory Lorch Nute Sylva Santagar Falia Flowers Ghael Mordane Leo Tyrell Eldred Codd William Mooton Garth Greyfeather Forley Prester Ellaria Sand Tim Tangletongue Josua Willum Ravella Swann Andrey Dalt Osmund Kettleblack Ottyn Wythers Dagmer Orphan Oss Ryger Rivers Rodrik Ry
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What just happened? Let&amp;rsquo;s take a closer look at the &lt;code&gt;min&lt;/code&gt; function &lt;a href=&#34;https://clojuredocs.org/clojure.core/min&#34;&gt;documentation&lt;/a&gt;. The documentation describes the form as &lt;code&gt;(min x)&lt;/code&gt;, &lt;code&gt;(min x y)&lt;/code&gt;, &lt;code&gt;(min x y &amp;amp; more)&lt;/code&gt;, which means we have the write the arguments out, not hand it a collection! We are able to apply the &lt;code&gt;min&lt;/code&gt; function along the elements of a collection if we use the &lt;code&gt;apply&lt;/code&gt; function though!&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;
      	      &lt;span style=&#34;color: #4e9a06&#34;&gt;:let&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- count:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- min:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;apply min &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;l$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Exception in thread &amp;quot;main&amp;quot; java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Number
	at clojure.lang.Numbers.lt(Numbers.java:221)
	at clojure.lang.Numbers.min(Numbers.java:4124)
	at clojure.core$min.invokeStatic(core.clj:1114)
	at clojure.core$min.doInvoke(core.clj:1106)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:646)
	at clojure.core$apply.invoke(core.clj:641)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh the struggle is real now. Alright, we only want to apply the &lt;code&gt;min&lt;/code&gt; function &lt;em&gt;if&lt;/em&gt; the contents of the set are a number then!&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;
      	      &lt;span style=&#34;color: #4e9a06&#34;&gt;:let&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; 
      		     &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- count:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; 
      		     &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;= &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))&lt;/span&gt;
      		     	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- min:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;apply min &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name - count: 916 nil
Allegiances - count: 21 nil
Death Year - count: 5 nil
Book of Death - count: 6 nil
Death Chapter - count: 72 nil
Book Intro Chapter - count: 80 nil
Gender - count: 2 nil
Nobility - count: 2 nil
GoT - count: 2 nil
CoK - count: 2 nil
SoS - count: 2 nil
FfC - count: 2 nil
DwD - count: 2 nil
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apparently everything is considered a string, which makes sense seeing as how I never told the script to see the contents of the csv file as anything other than a string! Time to cast things! First I&amp;rsquo;m going to see if the first item in the set contains digits, and if it does then I will parse it as an integer.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;
      	      &lt;span style=&#34;color: #4e9a06&#34;&gt;:let&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; 
      		     &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- count:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; 
      		     &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;= &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))&lt;/span&gt;
      		     	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- min:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;apply min &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name - count: 916 nil
Allegiances - count: 21 nil
Death Year - count: 5 nil
Book of Death - count: 6 nil
Death Chapter - count: 72 nil
Book Intro Chapter - count: 80 nil
Gender - count: 2 - min:0
Nobility - count: 2 - min:0
GoT - count: 2 - min:0
CoK - count: 2 - min:0
SoS - count: 2 - min:0
FfC - count: 2 - min:0
DwD - count: 2 - min:0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Are you frustrated? I sure am! At this point in my lesson planning I actually go into the data and see that the only two columns that contain strings are the first two: Name and Alliances. Now my plan is to check to see if the header is either of those two, and if it isn&amp;rsquo;t, then I am going to parse everything as an integer.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;
      	      &lt;span style=&#34;color: #4e9a06&#34;&gt;:let&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; 
      		     &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- count:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; 
      		     &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;if-not &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;or &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;= &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;= &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Allegiances&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
      		     	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- min:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;apply min &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;Integer/parseInt&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name - count: 916 nil
Allegiances - count: 21 nil
Exception in thread &amp;quot;main&amp;quot; java.lang.NumberFormatException: For input string: &amp;quot;&amp;quot;
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:592)
	at java.lang.Integer.parseInt(Integer.java:615)
	at tutorial.got$_main$fn__25.invoke(got.clj:15)
	at clojure.core$map$fn__4785.invoke(core.clj:2646)
	at clojure.lang.LazySeq.sval(LazySeq.java:40)
	at clojure.lang.LazySeq.seq(LazySeq.java:49)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Come on! Really? At least I know what&amp;rsquo;s going on. The &lt;code&gt;parseInt&lt;/code&gt; is struggling with the empty string, so we need to filter them out of the &lt;code&gt;value-set&lt;/code&gt; before we parse the values as integers.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;
      	      &lt;span style=&#34;color: #4e9a06&#34;&gt;:let&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]]&lt;/span&gt;
      	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; 
      		     &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- count:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; 
      		     &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;if-not &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;or &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;= &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;= &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Allegiances&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
      		     	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- min:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;apply min &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;Integer/parseInt&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;filter &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name - count: 916 nil
Allegiances - count: 21 nil
Death Year - count: 5 - min:297
Book of Death - count: 6 - min:1
Death Chapter - count: 72 - min:0
Book Intro Chapter - count: 80 - min:0
Gender - count: 2 - min:0
Nobility - count: 2 - min:0
GoT - count: 2 - min:0
CoK - count: 2 - min:0
SoS - count: 2 - min:0
FfC - count: 2 - min:0
DwD - count: 2 - min:0

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Victory! Now let&amp;rsquo;s print out the max! I&amp;rsquo;m going to do a little restructuring because I want to &lt;code&gt;apply&lt;/code&gt; &lt;code&gt;max&lt;/code&gt; and &lt;code&gt;min&lt;/code&gt; to the same filtered collection of integers, so I am going to create a symbol for it in a &lt;code&gt;let&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;tutorial.got&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]))&lt;/span&gt;
    
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;zipmap &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;rest &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))]&lt;/span&gt;
      &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;headers&lt;/span&gt;
              &lt;span style=&#34;color: #4e9a06&#34;&gt;:let&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;set &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;get &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]]&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; 
                 &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- count:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; 
                 &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;if-not &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;or &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;= &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;= &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Allegiances&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
                   &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;int_values&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;map &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;Integer/parseInt&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;filter &lt;/span&gt;&lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;&amp;gt; &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;count &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;value_sets&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))]&lt;/span&gt;
                     &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- min:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;apply min &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;int_values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
                          &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;- max:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;apply max &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;int_values&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -cp ~/clojure-1.8.0.jar:. clojure.main -m tutorial.got character-deaths.csv
Name - count: 916 nil
Allegiances - count: 21 nil
Death Year - count: 5 - min:297- max:300
Book of Death - count: 6 - min:1- max:5
Death Chapter - count: 72 - min:0- max:80
Book Intro Chapter - count: 80 - min:0- max:80
Gender - count: 2 - min:0- max:1
Nobility - count: 2 - min:0- max:1
GoT - count: 2 - min:0- max:1
CoK - count: 2 - min:0- max:1
SoS - count: 2 - min:0- max:1
FfC - count: 2 - min:0- max:1
DwD - count: 2 - min:0- max:1

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Syntax Highlighting for Clojure in gedit</title>
      <link>https://adelehedrick.github.io/blog/2016/09/24/clojure-gedit-syntax-highlighting/</link>
      <pubDate>Sat, 24 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/24/clojure-gedit-syntax-highlighting/</guid>
      <description>

&lt;h2 id=&#34;making-gedit-pretty-again&#34;&gt;Making gedit Pretty Again&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m assuming you are exhausted by now of the lack of syntax highlighting for Clojure in gedit (like I &lt;em&gt;was&lt;/em&gt;) and that you have Git installed (you likely already have it).&lt;/p&gt;

&lt;p&gt;A quick search provided me with enough information to get it working and I will share the stepts that I took with you now.&lt;/p&gt;

&lt;p&gt;Make sure your gedit is closed before you begin.&lt;/p&gt;

&lt;h3 id=&#34;step-1-open-terminal-and-download-repo&#34;&gt;Step 1. Open terminal and download repo&lt;/h3&gt;

&lt;p&gt;Make sure you are starting from the home directory so this whole thing will be a matter of copy/paste&lt;/p&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/mitko/clojure_for_gedit.git
cd clojure_for_gedit/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-2-move-files-to-where-they-need-to-be&#34;&gt;Step 2. Move files to where they need to be&lt;/h3&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cp clojure.lang /usr/share/gtksourceview-3.0/language-specs/clojure.lang
sudo cp clojure.xml /usr/share/mime/packages/clojure.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-3-update-mime&#34;&gt;Step 3. Update mime&lt;/h3&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ../usr/share
sudo update-mime-database mime
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This last command might take a minute, and you will get no progress output, so just be patient. When you get your cursor back, it is completed (there will be no output).&lt;/p&gt;

&lt;h3 id=&#34;step-4-open-up-a-clojure-file-to-confirm&#34;&gt;Step 4. Open up a Clojure file to confirm&lt;/h3&gt;

&lt;p&gt;You should have pretty syntax highlighting now!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Basics of Command Line Arguments in Clojure</title>
      <link>https://adelehedrick.github.io/blog/2016/09/22/command-line-arguments-clojure/</link>
      <pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/22/command-line-arguments-clojure/</guid>
      <description>

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before We Begin&lt;/h2&gt;

&lt;p&gt;This post is a continuation of the &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/22/clojure-classes/&#34;&gt;classes post&lt;/a&gt;. So if it you&amp;rsquo;re confused head on over there!&lt;/p&gt;

&lt;h3 id=&#34;step-1-open-and-edit-hello-clj&#34;&gt;Step 1. Open and edit hello.clj&lt;/h3&gt;

&lt;p&gt;In the project we made previously, open up the &amp;lsquo;hello.clj&amp;rsquo; by entering &lt;code&gt;gedit hello.clj&lt;/code&gt; in terminal.&lt;/p&gt;

&lt;p&gt;We are now going to put a symbol in the parameter area of the main method declaration.&lt;/p&gt;

&lt;p&gt;We are also going to change the output to include the name entered rather than &amp;ldquo;World&amp;rdquo;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;hello&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;:gen-class&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;

&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hello &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;name &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Save and close the file.&lt;/p&gt;

&lt;h3 id=&#34;step-2-open-a-repl-and-compile&#34;&gt;Step 2. Open a REPL and compile&lt;/h3&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rlwrap java -cp ~/clojure-1.8.0.jar:. clojure.main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In REPL:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;compile&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;hello&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hello
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Success! Now you can exit the REPL with &lt;code&gt;CTRL + C&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;step-3-execute-the-class-file&#34;&gt;Step 3. Execute the class file&lt;/h3&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -cp ~/clojure-1.8.0.jar:./classes hello
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Exception in thread &amp;quot;main&amp;quot; clojure.lang.ArityException: Wrong number of args (0) passed to: hello/-main
	at clojure.lang.AFn.throwArity(AFn.java:429)
	at clojure.lang.AFn.invoke(AFn.java:28)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at hello.main(Unknown Source)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Whoops! Forgot the actual command line arguments! Let&amp;rsquo;s give a shout out to our very own varsity member! #Power10!&lt;/p&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -cp ~/clojure-1.8.0.jar:./classes hello Christien
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Hello Christien!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Success! I am so full of campus pride right now!&lt;/p&gt;

&lt;h3 id=&#34;step-4-more-arguments&#34;&gt;Step 4. More arguments&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s open up the &amp;lsquo;hello.clj&amp;rsquo; file once again and change the arguments to two arguments; first and last.&lt;/p&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gedit hello.clj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In hello.clj:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;hello&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;:gen-class&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;

&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;last&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hello &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;last &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;, &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Save and close the file.&lt;/p&gt;

&lt;h3 id=&#34;step-5-recompile&#34;&gt;Step 5. Recompile&lt;/h3&gt;

&lt;p&gt;You should have the line to open up the REPL still in your history, so press the up arrow till you find:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rlwrap java -cp ~/clojure-1.8.0.jar:. clojure.main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In REPL:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;compile&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;hello&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hello
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-6-say-hello-to-our-professor&#34;&gt;Step 6. Say &amp;lsquo;hello&amp;rsquo; to our professor&lt;/h3&gt;

&lt;p&gt;Again you should be able to press the up arrow till you find the write command, but don&amp;rsquo;t forget to change the command line arguments.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -cp ~/clojure-1.8.0.jar:./classes hello Ken Pu
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Hello Pu, Ken!
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-7-way-more-arguments-to-be-less-rude-ironic&#34;&gt;Step 7. Way more arguments to be less rude (ironic?)&lt;/h3&gt;

&lt;p&gt;Open up your &amp;lsquo;hello.clj&amp;rsquo; again and this time we are going to get fancy.&lt;/p&gt;

&lt;p&gt;In hello.clj:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;hello&lt;/span&gt;
	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;clojure.string&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;:only&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;join&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)])&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;:gen-class&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;

&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;first last &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;prefix&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hello &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;prefix&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;. &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;first &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #204a87&#34;&gt;last &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;! &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;join &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Now I require that three arguments are provided; first, last and prefix. If there are any other arguments passed, the &lt;code&gt;&amp;amp;&lt;/code&gt; is going to put the &lt;em&gt;rest&lt;/em&gt; of them into the symbol &lt;code&gt;msg&lt;/code&gt; as a list.&lt;/p&gt;

&lt;p&gt;Since I want to actually output the rest of the arguments as a sentence, we need to take the list of words in &lt;code&gt;msg&lt;/code&gt; and concatenate them together, in order, and separated by spaces. To use the join function, we will need to use the &lt;code&gt;clojure.string&lt;/code&gt; library and &lt;em&gt;only&lt;/em&gt; pull out the &lt;code&gt;join&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Save and close the file.&lt;/p&gt;

&lt;h3 id=&#34;step-8-recompile&#34;&gt;Step 8. Recompile&lt;/h3&gt;

&lt;p&gt;You should have the line to open up the REPL still in your history, so press the up arrow till you find:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rlwrap java -cp ~/clojure-1.8.0.jar:. clojure.main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In REPL:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;compile&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;hello&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hello
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sounds repetative, because it is. Thank you copy-paste!&lt;/p&gt;

&lt;h3 id=&#34;step-9-give-a-good-greeting-to-our-professor&#34;&gt;Step 9. Give a good greeting to our professor&lt;/h3&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -cp ~/clojure-1.8.0.jar:./classes hello Ken Pu Dr Seen anything interesting on Hacker News lately?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Hello Dr. Ken Pu! Seen anything interesting on Hacker News lately?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You all should be argumenting pros now!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making Classes From Clojure</title>
      <link>https://adelehedrick.github.io/blog/2016/09/22/clojure-classes/</link>
      <pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/22/clojure-classes/</guid>
      <description>

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before We Begin&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m assuming you have the Clojure JAR and know how to run a basic script and a REPL. If you need a reminder head on to &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/18/getting-started-clojure/&#34;&gt;Getting Started with Clojure&lt;/a&gt; to get yourself caught up.&lt;/p&gt;

&lt;p&gt;This post is also assuming that you are running Ubuntu or some other Linux flavor.&lt;/p&gt;

&lt;h2 id=&#34;project-setup&#34;&gt;Project Setup&lt;/h2&gt;

&lt;h3 id=&#34;step-1-move-the-jar-to-your-home-sweet-home&#34;&gt;Step 1. Move the JAR to your home-sweet-home&lt;/h3&gt;

&lt;p&gt;For simplicity sake, I&amp;rsquo;m going to ask that you put your &amp;lsquo;clojure-1.8.0.jar&amp;rsquo; file into your home directory so it is accessible via &amp;lsquo;~/clojure-1.8.0.jar&amp;rsquo;.&lt;/p&gt;

&lt;h3 id=&#34;step-2-create-a-project-folder&#34;&gt;Step 2. Create a project folder&lt;/h3&gt;

&lt;p&gt;Create a project folder somewhere other than your home folder. Perhaps in a place you normally put your projects?&lt;/p&gt;

&lt;h3 id=&#34;step-3-create-a-classes-folder&#34;&gt;Step 3. Create a classes folder&lt;/h3&gt;

&lt;p&gt;At this point you can open up a terminal for your project folder. A cheap way to open a terminal for a window of a directory is to right click on the window, and select &amp;lsquo;Open in Terminal&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m now going to switch to doing most commands in terminal so we all can get cozy in this environment.&lt;/p&gt;

&lt;p&gt;Make the &amp;lsquo;classes&amp;rsquo; folder with &lt;code&gt;mkdir classes&lt;/code&gt; (this name is non-negotiable)&lt;/p&gt;

&lt;p&gt;Confirm the folder by checking what&amp;rsquo;s currently in the directory with &lt;code&gt;ls&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;step-4-create-a-hello-clj&#34;&gt;Step 4. Create a hello.clj&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m just using gedit for everything since I&amp;rsquo;m lazy, so go ahead and create a &amp;lsquo;hello.clj&amp;rsquo; file by entering &lt;code&gt;gedit hello.clj&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the hello.clj file I want you to enter:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;hello&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;:gen-class&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;

&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;-main&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[]&lt;/span&gt;
  &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;str &lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;It is important to note that the &lt;a href=&#34;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/ns&#34;&gt;ns&lt;/a&gt; macro we called in the first line cooresponds to the name of our file. Supplying the &lt;code&gt;:gen-class&lt;/code&gt; keyword will allow this file to compile into a class file of the same name as the namespace and the class is expected to have a main function.&lt;/p&gt;

&lt;p&gt;Speaking of main functions, we declared one! Since we don&amp;rsquo;t want any command line arguments (yet) we can just leave the parameter area blank.&lt;/p&gt;

&lt;p&gt;You may now save and close this file.&lt;/p&gt;

&lt;h3 id=&#34;step-5-start-a-repl&#34;&gt;Step 5. Start a REPL&lt;/h3&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rlwrap java -cp ~/clojure-1.8.0.jar clojure.main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice the &lt;code&gt;~/&lt;/code&gt; which points to the home folder no matter what directory you are currently in!&lt;/p&gt;

&lt;h3 id=&#34;step-6-compile-in-the-repl&#34;&gt;Step 6. Compile in the REPL&lt;/h3&gt;

&lt;p&gt;In REPL:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;compile&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;hello&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hello
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sweet! It spit out the name of our namespace!&lt;/p&gt;

&lt;p&gt;Now enter &lt;code&gt;CTRL + C&lt;/code&gt; to exit the REPL&lt;/p&gt;

&lt;h3 id=&#34;step-7-take-a-peek-at-the-classes&#34;&gt;Step 7. Take a peek at the classes&lt;/h3&gt;

&lt;p&gt;Remember how I said it was important to create that &amp;lsquo;classes&amp;rsquo; folder? Well it is because the Clojure compiler expects it to exist, and places all your class files in there.&lt;/p&gt;

&lt;p&gt;In Terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd classes
ls
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hello.class        hello__init.class                     hello$_main.class
hello$fn__5.class  hello$loading__5569__auto____3.class
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Look at all those fancy classes! Now return back to your project folder.&lt;/p&gt;

&lt;p&gt;In Terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-8-execute-the-classes&#34;&gt;Step 8. Execute the classes&lt;/h3&gt;

&lt;p&gt;In Terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -cp ~/clojure-1.8.0.jar:./classes hello
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that we had to include the &amp;lsquo;classes&amp;rsquo; folder in the classpath.&lt;/p&gt;

&lt;h3 id=&#34;moving-forward&#34;&gt;Moving forward&lt;/h3&gt;

&lt;p&gt;My &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/22/command-line-arguments-clojure/&#34;&gt;next post&lt;/a&gt; will extend this post by adding command line arguments!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Taking Advantage of Bash Aliases for Clojure</title>
      <link>https://adelehedrick.github.io/blog/2016/09/22/clojure-bash-aliases/</link>
      <pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/22/clojure-bash-aliases/</guid>
      <description>

&lt;h2 id=&#34;too-much-typing&#34;&gt;Too much typing!&lt;/h2&gt;

&lt;p&gt;I don&amp;rsquo;t know about you, but I am exhausted from typing in terminal all the characters I need to start a REPL, or execute Clojure class files.&lt;/p&gt;

&lt;p&gt;A little birdy asked me how Ken has short forms for within terminal, and my response was &amp;ldquo;I don&amp;rsquo;t know, we should Google that!&amp;rdquo;&lt;/p&gt;

&lt;p&gt;I think I have some pretty snazzy aliases (that&amp;rsquo;s what Google said their called) now and I am willing to share them with you.&lt;/p&gt;

&lt;h2 id=&#34;home-for-the-clojure-jar&#34;&gt;Home for the Clojure JAR&lt;/h2&gt;

&lt;p&gt;For my aliases to work for you, you need to put your &amp;lsquo;clojure-1.8.0.jar&amp;rsquo; into your home folder.&lt;/p&gt;

&lt;h2 id=&#34;the-magical-bash-aliases&#34;&gt;The magical .bash_aliases&lt;/h2&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo gedit ~/.bash_aliases
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Will open the file where all your aliases have been stored. Do &lt;em&gt;not&lt;/em&gt; remove anything that is already there (don&amp;rsquo;t be scared if the file is empty), but you can append some more to the bottom.&lt;/p&gt;

&lt;p&gt;Append the following to your .bash_aliases&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias cljrepl=&#39;rlwrap java -cp ~/clojure-1.8.0.jar:. clojure.main &#39;
alias clj=&#39;java -cp ~/clojure-1.8.0.jar:. clojure.main &#39;
alias cljclass=&#39;java -cp ~/clojure-1.8.0.jar:./classes &#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save and close.&lt;/p&gt;

&lt;p&gt;The first alias &lt;code&gt;cljrepl&lt;/code&gt; starts a REPL from your current directory with the rlwrap. The second alias &lt;code&gt;clj&lt;/code&gt; is your basic REPL or execution. Finally the third alias &lt;code&gt;cljclass&lt;/code&gt; is to be used from within your project folder one level up from your &amp;lsquo;classes&amp;rsquo; folder.&lt;/p&gt;

&lt;h2 id=&#34;try-it-out&#34;&gt;Try it out&lt;/h2&gt;

&lt;p&gt;If you still have the hello.clj from the &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/22/command-line-arguments-clojure/&#34;&gt;command line arguments post&lt;/a&gt;, feel free to try out these tasks from a terminal in the project directory:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Start a REPL with &lt;code&gt;cljrepl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In the REPL: &lt;code&gt;(compile &#39;hello)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CTRL + C&lt;/code&gt; to exit the REPL&lt;/li&gt;
&lt;li&gt;Execute the class with &lt;code&gt;cljclass hello Adele Hedrick Mrs I really appreciate you typing all this out!&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Output: &lt;code&gt;Hello Mrs. Adele Hedrick! I really appreciate you typing all this out!&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hope this makes your life easier!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Little Input in Clojure</title>
      <link>https://adelehedrick.github.io/blog/2016/09/21/little-input-clojure/</link>
      <pubDate>Wed, 21 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/21/little-input-clojure/</guid>
      <description>

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before We Begin&lt;/h2&gt;

&lt;p&gt;Make sure that you have the Clojure JAR handy and know how to use it! If you don&amp;rsquo;t remember, then check out this &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/18/getting-started-clojure/&#34;&gt;post&lt;/a&gt; to get yourself started!&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m assuming you understand binding, loops and basic functions in Clojure by now, but anything I do here I will be sure to explain in detail to help reinforce your understanding.&lt;/p&gt;

&lt;p&gt;Dr. Ken Pu has graciously provided some extremely relevant data for everyone to play with. So relevant that it might change your undergraduate lives at this very moment. He has provided&amp;ndash;&lt;em&gt;drum roll please&lt;/em&gt;&amp;ndash;&lt;strong&gt;the current listing of classes and rooms for this semester!&lt;/strong&gt; The relevance might elude you, but after your first assignment, you will see the value in this data!&lt;/p&gt;

&lt;h3 id=&#34;step-1-find-a-happy-place&#34;&gt;Step 1. Find a Happy Place&lt;/h3&gt;

&lt;p&gt;Find a happy place to put the files for this activity and make sure you know the path from the current directory to your Clojure JAR file. Better yet, why don&amp;rsquo;t you copy that JAR file into your current directory.&lt;/p&gt;

&lt;h3 id=&#34;step-2-download-the-data&#34;&gt;Step 2. Download the Data&lt;/h3&gt;

&lt;p&gt;Open up a terminal window for your current directory and download the file with a &lt;code&gt;wget&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://adelehedrick.github.io/Fall-2016-CSCI-3055U/files/csci3055u-a1.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-3-create-a-clojure-file&#34;&gt;Step 3. Create a Clojure File&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gedit read_file.clj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The next few steps will be from within this file you just created and opened.&lt;/p&gt;

&lt;h3 id=&#34;step-4-use-the-clojure-java-i-o-library&#34;&gt;Step 4. &amp;ldquo;Use&amp;rdquo; the Clojure Java I/O Library&lt;/h3&gt;

&lt;p&gt;Start by telling Clojure that you want to use the io library&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id=&#34;step-5-with-open-goodness&#34;&gt;Step 5. With-Open Goodness&lt;/h3&gt;

&lt;p&gt;As you know I/O comes with many risks. What if we lose connection to the file? What if the file is too big and we run out of memory? What if there is no file? That is why when doing I/O, you typically have to surround the block of code with a try-catch. You also need to &lt;em&gt;close&lt;/em&gt; the file when you are done with it! So many things to worry about with I/O.&lt;/p&gt;

&lt;p&gt;Thankfully, Clojure has provided us with the &lt;a href=&#34;https://clojuredocs.org/clojure.core/with-open&#34;&gt;with-open&lt;/a&gt; function which looks like this:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&amp;lt;file&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Note that I will use &amp;lt;&amp;hellip;&amp;gt; as placeholders for awesomeness to come&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://clojuredocs.org/clojure.core/with-open&#34;&gt;with-open&lt;/a&gt; will open the file and surround it as well as the body of the function in a try-catch for us, as well as &lt;em&gt;close&lt;/em&gt; the file when we are finished the body of the function!&lt;/p&gt;

&lt;h3 id=&#34;step-6-let-s-bind-a-file-to-something-short-and-sweet&#34;&gt;Step 6. Let&amp;rsquo;s Bind a File to Something Short and Sweet&lt;/h3&gt;

&lt;p&gt;In Clojure we don&amp;rsquo;t assign values to variables, we are too cool for that now. Instead, we &lt;em&gt;bind&lt;/em&gt; values to &lt;em&gt;symbols&lt;/em&gt;. The &lt;code&gt;[ ]&lt;/code&gt; that we had beside the &lt;code&gt;with-open&lt;/code&gt;, is what holds our bindings, which in this case will be a single symbol and value to be bound to it.&lt;/p&gt;

&lt;p&gt;We are going to use the &lt;a href=&#34;https://clojuredocs.org/clojure.java.io/reader&#34;&gt;reader&lt;/a&gt; function within the io library which takes a single argument&amp;ndash;the file path/name&amp;ndash;and bind it to something short like &lt;code&gt;r&lt;/code&gt; for reader.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;csci3055u-a1.txt&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id=&#34;step-7-read-print&#34;&gt;Step 7. Read &amp;amp; Print&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s just jump ahead a bunch of steps and start printing &lt;em&gt;something&lt;/em&gt;! We are going to use the &lt;code&gt;println&lt;/code&gt; function to print something that we read from the reader &lt;code&gt;r&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In read_file.clj:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;csci3055u-a1.txt&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;.read&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -cp clojure-1.8.0.jar clojure.main read_file.clj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;50
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No errors! But let&amp;rsquo;s just double check what&amp;rsquo;s going on. The first line of the text file you have is actually :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;201609|Foun.of Ditgl Teach &amp;amp; Lrn Tech|AEDT 1120U|12|M|10|13|0|Virtual ONLINE11
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where did the 50 come from? Turns out we read in a char, and printed the raw value of it rather than the char it represents. Let&amp;rsquo;s fix that by telling the println to print the char that we read in.&lt;/p&gt;

&lt;p&gt;In read_file.clj:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;csci3055u-a1.txt&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;char &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;.read&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -cp clojure-1.8.0.jar clojure.main read_file.clj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Success! We have read something in from the file and printed it to the console!&lt;/p&gt;

&lt;h3 id=&#34;step-8-keep-reading-till-the-end&#34;&gt;Step 8. Keep Reading Till the End&lt;/h3&gt;

&lt;p&gt;We want to read-print-read-print&amp;hellip;, so in other words we need to repeat a set of instructions. I&amp;rsquo;m sure you are all familiar with &lt;em&gt;for&lt;/em&gt; loops and &lt;em&gt;while&lt;/em&gt; loops, but again I will say that we are too cool for that now, because in Clojure we use recursion to loop over things!&lt;/p&gt;

&lt;p&gt;In this next snippet, I had to refactor some things. The value read in by &lt;code&gt;.read r&lt;/code&gt; is now bound to the symbol &lt;code&gt;c&lt;/code&gt; during the initialization of the &lt;a href=&#34;https://clojuredocs.org/clojure.core/loop&#34;&gt;loop&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We check to see if &lt;code&gt;c&lt;/code&gt; is anything but the end of the file (which is represented by &lt;code&gt;-1&lt;/code&gt;). This &lt;code&gt;if&lt;/code&gt; statement will actually become our stopping condition for the loop.&lt;/p&gt;

&lt;p&gt;Since we want to do two instructions concurrently we need to wrap the two statements in a &lt;a href=&#34;https://clojuredocs.org/clojure.core/do&#34;&gt;do&lt;/a&gt; function which allows us to evaluate the statements in order.&lt;/p&gt;

&lt;p&gt;The first statement in our &lt;a href=&#34;https://clojuredocs.org/clojure.core/do&#34;&gt;do&lt;/a&gt; function prints the character that the &lt;code&gt;c&lt;/code&gt; symbol represents. The second statement has the &lt;a href=&#34;https://clojuredocs.org/clojure.core/loop&#34;&gt;recur&lt;/a&gt; function which actually returns us to the beginning of our &lt;a href=&#34;https://clojuredocs.org/clojure.core/loop&#34;&gt;loop&lt;/a&gt;, passing along the new value to be assigned to &lt;code&gt;c&lt;/code&gt;. The value that we pass along is the next character read in from our reader &lt;code&gt;r&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In read_file.clj:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;csci3055u-a1.txt&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;loop &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;.read&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt; 
    	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;if &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;not= &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #0000cf; font-weight: bold&#34;&gt;-1&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
    	   &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;do&lt;/span&gt;
    	       &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;print &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;char &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
    	       &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;recur&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;.read&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;In terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -cp clojure-1.8.0.jar clojure.main read_file.clj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have  now printed the entire file to the console, but in the worst possible way! So don&amp;rsquo;t hand anything like this in.&lt;/p&gt;

&lt;h3 id=&#34;step-9-do-better-with-sequences&#34;&gt;Step 9. Do Better With Sequences&lt;/h3&gt;

&lt;p&gt;Sequences are powerful! Essentially, they let us take one item from a list/vector/array like collection without worrying about how big the collection it came from. We just deal with the items one at a time, and it is glorious and fast!&lt;/p&gt;

&lt;p&gt;In the next snippet, the reader &lt;code&gt;r&lt;/code&gt; is now going to become the input to the &lt;a href=&#34;https://clojuredocs.org/clojure.core/line-seq&#34;&gt;line-seq&lt;/a&gt;, which as you can guess is a &lt;em&gt;sequence of lines&lt;/em&gt; (isn&amp;rsquo;t that exactly what a text file is anyway?).&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://clojuredocs.org/clojure.core/doseq&#34;&gt;doseq&lt;/a&gt; is similar to a &amp;lsquo;for each&amp;rsquo; loop in other languages. To really hammer this home, what this statement is saying is that we want to &amp;lsquo;do the body of the loop, to every line in the line sequence &lt;code&gt;ls&lt;/code&gt;&amp;lsquo;&lt;/p&gt;

&lt;p&gt;In read_file.clj:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;#39;clojure.java.io&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;with-open &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;reader&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;csci3055u-a1.txt&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
	&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;doseq &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;line-seq &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)]&lt;/span&gt;
		&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87&#34;&gt;println &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;ls&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;moving-forward&#34;&gt;Moving Forward&lt;/h2&gt;

&lt;p&gt;Want to see how we can extract specific values from the lines we read in? Head on over to the post on &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/21/split-clojure/&#34;&gt;doing the splits in Clojure&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Doing the Splits in Clojure</title>
      <link>https://adelehedrick.github.io/blog/2016/09/21/split-clojure/</link>
      <pubDate>Wed, 21 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/21/split-clojure/</guid>
      <description>

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before We Begin&lt;/h2&gt;

&lt;p&gt;This is going to be a quick tutorial about the &lt;a href=&#34;https://clojuredocs.org/clojure.string/split&#34;&gt;split&lt;/a&gt; function in Clojure.&lt;/p&gt;

&lt;p&gt;You will need to have a REPL up and running. If you forgot how to do that visit &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/19/first-clojure-repl/&#34;&gt;this post&lt;/a&gt;. I will tell you exactly when to enter statements into the REPL, and those statements will be preceded by the &lt;code&gt;user=&amp;gt;&lt;/code&gt; prompt.&lt;/p&gt;

&lt;h3 id=&#34;load-the-split&#34;&gt;Load the Split&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;user=&amp;gt; (use &#39;[clojure.string :only (split)])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nil
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using this doesn&amp;rsquo;t return a value, so we get a nil.&lt;/p&gt;

&lt;h3 id=&#34;let-s-be-friends&#34;&gt;Let&amp;rsquo;s Be Friends&lt;/h3&gt;

&lt;p&gt;I am going to start off by using a &lt;a href=&#34;https://clojuredocs.org/clojure.core/let&#34;&gt;let&lt;/a&gt; special form to bind some values to symbols in a cozy local scope. Please note that &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; are placeholders.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&amp;lt;symbols&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;values&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;a href=&#34;https://clojuredocs.org/clojure.string/split&#34;&gt;split&lt;/a&gt; function that I will be demoing, has two required arguments, and a third optional argument. Respectively they are; the string you are splitting, the regular expression you are using to split with, and the optional limit.&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s create the symbol &lt;code&gt;s&lt;/code&gt; for the string &amp;lsquo;I like pumpkin spice lattes and am proud of it&amp;rsquo;, and the symbol &lt;code&gt;re&lt;/code&gt; for the regular expression of a space.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;I like pumpkin spice lattes and am proud of it&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #000000&#34;&gt;re&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;\s&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id=&#34;going-on-a-hashtag-tangent&#34;&gt;Going on a Hashtag Tangent&lt;/h4&gt;

&lt;p&gt;Some of you may be wondering what is going on with the # in front of the string containing our regular expression for a space. To address your wondering, it is a reader macro that will make the pattern within the quotes be compiled at read-time. See more in the &lt;a href=&#34;http://clojure.org/reference/other_functions&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;split&#34;&gt;Split!&lt;/h3&gt;

&lt;p&gt;Time to replace the body placeholder with the &lt;a href=&#34;https://clojuredocs.org/clojure.string/split&#34;&gt;split&lt;/a&gt; function.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f8f8f8&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #204a87; font-weight: bold&#34;&gt;let &lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;I like pumpkin spice lattes and am proud of it&amp;quot;&lt;/span&gt;
      &lt;span style=&#34;color: #000000&#34;&gt;re&lt;/span&gt; &lt;span style=&#34;color: #ce5c00; font-weight: bold&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #4e9a06&#34;&gt;&amp;quot;\s&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;split&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;re&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;user=&amp;gt; (let [s &amp;quot;I like pumpkin spice lattes and am proud of it&amp;quot; re #&amp;quot;\s&amp;quot;](split s re))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[&amp;quot;I&amp;quot; &amp;quot;like&amp;quot; &amp;quot;pumpkin&amp;quot; &amp;quot;spice&amp;quot; &amp;quot;lattes&amp;quot; &amp;quot;and&amp;quot; &amp;quot;am&amp;quot; &amp;quot;proud&amp;quot; &amp;quot;of&amp;quot; &amp;quot;it&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You now have a vector of strings!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Your First Clojure REPL</title>
      <link>https://adelehedrick.github.io/blog/2016/09/19/first-clojure-repl/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/19/first-clojure-repl/</guid>
      <description>

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before We Begin&lt;/h2&gt;

&lt;p&gt;Do you have the Clojure JAR? If not check out the &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/18/getting-started-clojure/&#34;&gt;Setting Up Clojure&lt;/a&gt; post&lt;/p&gt;

&lt;h2 id=&#34;your-first-clojure-repl&#34;&gt;Your First Clojure REPL&lt;/h2&gt;

&lt;p&gt;I like to think of the read-eval-print loop (REPL) as the &lt;em&gt;interactive programming&lt;/em&gt; mode of a language.&lt;/p&gt;

&lt;h3 id=&#34;step-1-find-your-clojure-jar&#34;&gt;Step 1. Find your Clojure JAR&lt;/h3&gt;

&lt;p&gt;First open a terminal window and navigate to where your Clojure JAR is located.&lt;/p&gt;

&lt;h3 id=&#34;step-2-run-the-main-method&#34;&gt;Step 2. Run the main method!&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rlwrap java -cp clojure-1.8.0.jar clojure.main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will now see that you have a new prompt that looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;user=&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are now ready to get your Clojure on! When starting a new language, it is good luck to do the typical &amp;ldquo;Hello World&amp;rdquo;. To do this, we will use the &lt;code&gt;println&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Type the following Clojure command to bring yourself lots of good luck with Clojure:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(println &amp;quot;Hello World&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To leave the REPL, you just need to use &lt;code&gt;CTRL + D&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Your First Leiningen REPL</title>
      <link>https://adelehedrick.github.io/blog/2016/09/19/first-lein-repl/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/19/first-lein-repl/</guid>
      <description>

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before We Begin&lt;/h2&gt;

&lt;p&gt;Have you installed Leiningen? It is a requirement of running the lein repl! If you have no idea what I am saying you can head on over to the &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/18/setting-up-lein/&#34;&gt;Setting Up Leiningen&lt;/a&gt; post&lt;/p&gt;

&lt;h2 id=&#34;your-first-lein-repl&#34;&gt;Your First lein REPL&lt;/h2&gt;

&lt;p&gt;I like to think of the read-eval-print loop (REPL) as the &lt;em&gt;interactive programming&lt;/em&gt; mode of a language. The first time you create a REPL through lein, it will download any extra files it needs.&lt;/p&gt;

&lt;p&gt;Open up one now in your terminal window with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lein repl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will now see that you have a new prompt that looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;user=&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are now ready to get your Clojure on! When starting a new language, it is good luck to do the typical &amp;ldquo;Hello World&amp;rdquo;. To do this, we will use the &lt;code&gt;println&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Type the following Clojure command to bring yourself lots of good luck with Clojure:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clojure&#34;&gt;(println &amp;quot;Hello World&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To leave the REPL, you just need to use &lt;code&gt;CTRL + D&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started with Clojure</title>
      <link>https://adelehedrick.github.io/blog/2016/09/18/getting-started-clojure/</link>
      <pubDate>Sun, 18 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/18/getting-started-clojure/</guid>
      <description>

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before We Begin&lt;/h2&gt;

&lt;p&gt;This guide will be for setting up your environment in a Linux OS, I&amp;rsquo;m currently using Ubuntu. You will need Java version 1.6 or later, which is recommended by everything that I have read so far.&lt;/p&gt;

&lt;p&gt;To check your Java version just open up a terminal and type:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you are probably thinking &amp;ldquo;why do we need Java? I thought we are programming in Clojure?&amp;rdquo; To answer your unasked question, the Clojure code you write will be compiled by the Clojure &lt;em&gt;compiler&lt;/em&gt; to create Java Virtual Machine (JVM) bytecode. The Clojure compiler&amp;ndash;that we will get to later on&amp;ndash;is actually an executable JAR file, hence the need for Java.&lt;/p&gt;

&lt;h2 id=&#34;get-clojure-up-running&#34;&gt;Get Clojure Up &amp;amp; Running&lt;/h2&gt;

&lt;h3 id=&#34;step-1-download-clojure-zip&#34;&gt;Step 1. Download Clojure Zip&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s start off by opening up a terminal, and navigating to a location you want the JAR. Once there use the &lt;code&gt;wget&lt;/code&gt; command to download the zip folder:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget http://repo1.maven.org/maven2/org/clojure/clojure/1.8.0/clojure-1.8.0.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-2-unzip&#34;&gt;Step 2. Unzip&lt;/h3&gt;

&lt;p&gt;Unzip the folder to current directory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;unzip clojure-1.8.0.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-3-move-the-jar-into-the-current-directory&#34;&gt;Step 3. Move the JAR into the Current Directory&lt;/h3&gt;

&lt;p&gt;If you enter &lt;code&gt;ls&lt;/code&gt; you will find your new &amp;lsquo;clojure-1.8.0&amp;rsquo; folder, and inside it is the &amp;lsquo;clojure-1.8.0.jar&amp;rsquo; that we want. Let&amp;rsquo;s pull that JAR out of its directory and bring it into the current directory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv clojure-1.8.0/clojure-1.8.0.jar ./
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-4-test-with-a-repl&#34;&gt;Step 4. Test with a REPL&lt;/h3&gt;

&lt;p&gt;I go into more detail about the REPL in this &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/19/first-clojure-repl/&#34;&gt;post&lt;/a&gt;, but for now just do these short steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enter &lt;code&gt;rlwrap java -cp clojure-1.8.0.jar clojure.main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You are now in the Clojure REPL. Try &lt;code&gt;(+ 1 3)&lt;/code&gt; and see if you get 4&lt;/li&gt;
&lt;li&gt;Exit out of the REPL by typing &lt;code&gt;CTRL + D&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that if rlwrap doesn&amp;rsquo;t work, then do a &lt;code&gt;sudo apt-get install rlwrap&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;step-4-run-a-clojure-script&#34;&gt;Step 4. Run a Clojure Script&lt;/h3&gt;

&lt;p&gt;REPLs are nice, but but what if you want to code offline and then run it? Let&amp;rsquo;s quickly do that!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Still in the same terminal window create a new Clojure file with &lt;code&gt;gedit hello.clj&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In the file enter &lt;code&gt;(println &amp;quot;Hello World!&amp;quot;)&lt;/code&gt; then save and close the file&lt;/li&gt;
&lt;li&gt;Back in your terminal window you are going to run the same command as you did to start the Clojure REPL, but now you are going to provide it with a command line argument of the file name of the script you just wrote: &lt;code&gt;java -cp clojure-1.8.0.jar clojure.main hello.clj&lt;/code&gt;. If you didn&amp;rsquo;t get the expected output of &lt;code&gt;Hello World!&lt;/code&gt; then something went wrong!&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;step-5-break-the-script&#34;&gt;Step 5. Break the Script&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s take a quick look at what happens when there is a bug in your Clojure code. Being able to read/write code is very important, but so is being able to read &lt;em&gt;errors&lt;/em&gt;!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open up the hello.clj again with &lt;code&gt;gedit hello.clj&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;println&lt;/code&gt; to something else (e.g. &lt;code&gt;printlny&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Now run the script again! &lt;code&gt;java -cp clojure-1.8.0.jar clojure.main hello.clj&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Errors!!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Exception in thread &amp;quot;main&amp;quot; java.lang.RuntimeException: Unable to resolve symbol: printlny in this context, compiling:(/home/delio/clojure_play/hello.clj:1:1)
	at clojure.lang.Compiler.analyze(Compiler.java:6688)
	at clojure.lang.Compiler.analyze(Compiler.java:6625)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3766)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6870)
	at clojure.lang.Compiler.analyze(Compiler.java:6669)
	at clojure.lang.Compiler.analyze(Compiler.java:6625)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:6001)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5380)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3972)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6866)
	at clojure.lang.Compiler.analyze(Compiler.java:6669)
	at clojure.lang.Compiler.eval(Compiler.java:6924)
	at clojure.lang.Compiler.load(Compiler.java:7379)
	at clojure.lang.Compiler.loadFile(Compiler.java:7317)
	at clojure.main$load_script.invokeStatic(main.clj:275)
	at clojure.main$script_opt.invokeStatic(main.clj:335)
	at clojure.main$script_opt.invoke(main.clj:330)
	at clojure.main$main.invokeStatic(main.clj:421)
	at clojure.main$main.doInvoke(main.clj:384)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.lang.Var.invoke(Var.java:379)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.Var.applyTo(Var.java:700)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Unable to resolve symbol: printlny in this context
	at clojure.lang.Util.runtimeException(Util.java:221)
	at clojure.lang.Compiler.resolveIn(Compiler.java:7164)
	at clojure.lang.Compiler.resolve(Compiler.java:7108)
	at clojure.lang.Compiler.analyzeSymbol(Compiler.java:7069)
	at clojure.lang.Compiler.analyze(Compiler.java:6648)
	... 23 more
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is an epic output! This stack trace shows you exactly where in the Clojure compiler JAR everything broke down, but most importantly it tells you where in your Clojure script it broke!&lt;/p&gt;

&lt;p&gt;Look at the first line a little more closely:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Exception in thread &amp;quot;main&amp;quot; java.lang.RuntimeException: Unable to resolve symbol: printlny in this context, compiling:(/home/delio/clojure_play/hello.clj:1:1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This tells me a lot! &lt;code&gt;Unable to resolve symbol: printly&lt;/code&gt; tells me that the compiler encountered  something&amp;ndash;in this case &amp;lsquo;printly&amp;rsquo;&amp;ndash;that is completely unknown, and therefore it can&amp;rsquo;t be translated to JVM bytecode! The error then tells me where it encountered the problem by showing the file name, line number and column; &lt;code&gt;(/home/delio/clojure_play/hello.clj:1:1)&lt;/code&gt;. Just to be clear, the first &amp;lsquo;1&amp;rsquo; is the line number, and the second is the column number.&lt;/p&gt;

&lt;h2 id=&#34;moving-forward&#34;&gt;Moving Forward&lt;/h2&gt;

&lt;p&gt;Ready for more? Why don&amp;rsquo;t you head over to the &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/22/clojure-classes/&#34;&gt;post on making classes from Clojure files&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting Up Leiningen</title>
      <link>https://adelehedrick.github.io/blog/2016/09/18/setting-up-lein/</link>
      <pubDate>Sun, 18 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://adelehedrick.github.io/blog/2016/09/18/setting-up-lein/</guid>
      <description>

&lt;h2 id=&#34;before-we-begin&#34;&gt;Before We Begin&lt;/h2&gt;

&lt;p&gt;This guide will be for setting up your environment in a Linux OS, I&amp;rsquo;m currently using Ubuntu. You will need Java version 1.6 or later, which is recommended by everything that I have read so far.&lt;/p&gt;

&lt;p&gt;To check your Java version just open up a terminal and type:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To quote their &lt;a href=&#34;http://leiningen.org/&#34;&gt;website&lt;/a&gt;; Leiningen is &amp;ldquo;for automating Clojure projects without setting your hair on fire.&amp;rdquo; Leiningen will be helping us get Clojure running as well as manage any dependencies we use. Instructions are on their &lt;a href=&#34;http://leiningen.org/&#34;&gt;website&lt;/a&gt; for installing Leiningen, but they are not detailed enough for my liking, so I have made very thorough instructions.&lt;/p&gt;

&lt;h2 id=&#34;install-leiningen&#34;&gt;Install Leiningen&lt;/h2&gt;

&lt;h3 id=&#34;step-1-open-a-terminal-and-download-the-lein-script&#34;&gt;Step 1. Open a terminal and download the lein script&lt;/h3&gt;

&lt;p&gt;Download the script right from the source listed on the Leiningen &lt;a href=&#34;http://leiningen.org/&#34;&gt;website&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-2-change-ownership&#34;&gt;Step 2. Change ownership&lt;/h3&gt;

&lt;p&gt;Use chmod to change the &lt;em&gt;ownership&lt;/em&gt; of the lein bash file you just downloaded to allow for anyone to execute the file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod a+x lein
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-3-move-lein&#34;&gt;Step 3. Move lein&lt;/h3&gt;

&lt;p&gt;Now move lein&amp;ndash;with super user privileges&amp;ndash;to your system&amp;rsquo;s executable path.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mv lein /usr/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are prompted to enter your password, do so and carry on.&lt;/p&gt;

&lt;h3 id=&#34;step-4-run-it&#34;&gt;Step 4. Run it&lt;/h3&gt;

&lt;p&gt;Now you will simply run &lt;em&gt;lein&lt;/em&gt; and it will download the self-install package. If you try to run lein without super user privileges, it might yell at you about firewall junk. Be sure to press &lt;code&gt;ENTER&lt;/code&gt; when it asks you to confirm this action.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo lein
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-5-confirm-all-is-well&#34;&gt;Step 5. Confirm all is well&lt;/h3&gt;

&lt;p&gt;Just to make sure everything is good, let&amp;rsquo;s check the version of lein.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lein -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should receive an output similar to mine below (depending on your Java version).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; Leiningen 2.7.0 on Java 1.7.0_80 Java HotSpot(TM) 64-Bit Server VM
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;Now that you have Leiningen installed and the Clojure compiler downloaded, why don&amp;rsquo;t you start &lt;a href=&#34;https://adelehedrick.github.io/blog/2016/09/19/first-lein-repl/&#34;&gt;your first Leiningen REPL&lt;/a&gt;?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>